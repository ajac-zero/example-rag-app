[project]
name = "rag"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{ name = "ajac-zero", email = "ajcardoza2000@gmail.com" }]
requires-python = ">=3.13"
dependencies = [
  "fastapi[standard]>=0.115.8",
  "openai>=1.61.1",
  "pydantic-settings>=2.7.1",
  "qdrant-client[fastembed]>=1.13.2",
]

[dependency-groups]
dev = [
  "just>=0.8.162",
  "marimo>=0.11.5",
  "mypy>=1.15.0",
  "pydeps>=3.0.1",
  "pytest>=8.3.4",
  "pytest-asyncio>=0.25.3",
  "pytest-cov>=6.0.0",
  "pytest-sugar>=1.0.0",
  "ruff>=0.9.6",
  "testcontainers[qdrant]>=4.9.1",
]

[project.scripts]
cli = "rag.entrypoints:cli"
api = "rag.entrypoints:api"

[tool.ruff]
extend-exclude = ["tests", "infra"]

[tool.ruff.lint]
select = [
  "A",
  "ANN0",
  "ANN2",
  "ANN4",
  "ASYNC",
  "B",
  "C4",
  "D",
  "E",
  "ERA",
  "F",
  "FAST",
  "I",
  "N",
  "PERF",
  "PL",
  "PTH",
  "UP",
  "RUF",
  "S",
  "SIM",
  "TID",
  "W",
]
ignore = ["E501"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-builtins]
builtins-allowed-modules = ["types"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.mypy]
ignore_missing_imports = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
omit = ["*/types/*"]

[tool.pydeps]
rankdir = "BT"
cluster = true
max_bacon = 2
rmprefix = [
  "rag.components.chat.",
  "rag.components.embed.",
  "rag.components.search.",
  "rag.",
]
exclude = ["rag.types"]
exclude_exact = ["rag.components"]

[tool.hatch.build.targets.wheel]
packages = ["src/rag"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
